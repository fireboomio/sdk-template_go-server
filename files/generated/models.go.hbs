package generated

{{#with typeFormatArray}}
import (
{{#each this}}
    {{~#equal this 'DateTime'}}
    "time"{{/equal}}
    {{~#equal this 'binary'}}
    "custom-go/pkg/types"{{/equal}}
    {{~#equal this 'Decimal'}}
    "github.com/shopspring/decimal"{{/equal}}
{{/each}}
)
{{/with}}
{{#each objectFieldArray}}
{{#if description}}// {{upperFirst (joinString '_' documentPath)}}
/*  {{description}} */{{/if}}
type {{upperFirst (joinString '_' documentPath)~}}
{{~#if additional}} {{#equal typeName 'array'}}[]{{else}}map[string]{{/equal~}}
{{~#with additional}}{{~> field_type this=this}}{{/with~}}
{{~else}} struct {
{{#each fields}}
    {{#if description}}/* {{description}} */
    {{/if}}{{upperFirst (trimPrefix name '_')}} {{#if isArray}}[]{{~/if~}}
{{~> field_type this=this}} `json:"{{name}}{{#unless required}},omitempty{{/unless}}"`
{{/each}}
}{{/if}}
{{/each}}

{{#each enumFieldArray}}
type {{upperFirst name}} {{#if valueType}}{{> field_type_simple typeName=valueType}}{{else}}string{{/if}}
const (
{{#each values}}
    {{upperFirst name}}_{{this}} {{upperFirst name}} = {{#if (equalAny valueType ',string')}}"{{this}}"{{else}}{{this}}{{/if}}
{{/each}}
)
{{/each}}